{"ast":null,"code":"const carReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_CAR':\n      return state.concat([action.data]);\n\n    case 'DELETE_CAR':\n      return state.filter(car => car.id !== action.id);\n\n    case 'EDIT_CAR':\n      return state.map(car => car.id === action.id ? { ...car,\n        isEdited: !car.isEdited\n      } : car);\n\n    case 'UPDATE':\n      return state.map(car => {\n        if (car.id === action.id) {\n          return { ...car,\n            manufacturer: action.data.newManufacturer,\n            name: action.data.newName,\n            horsepower: action.data.newHorsepower,\n            isEdited: !car.isEdited\n          };\n        } else return car;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default carReducer;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/EGYETEM/PHP Prog/reactassignment/src/reducers/carReducer.js"],"names":["carReducer","state","action","type","concat","data","filter","car","id","map","isEdited","manufacturer","newManufacturer","name","newName","horsepower","newHorsepower"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,aAAOF,KAAK,CAACG,MAAN,CAAa,CAACF,MAAM,CAACG,IAAR,CAAb,CAAP;;AACJ,SAAK,YAAL;AACI,aAAOJ,KAAK,CAACK,MAAN,CAAcC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWN,MAAM,CAACM,EAAxC,CAAP;;AACJ,SAAK,UAAL;AACI,aAAOP,KAAK,CAACQ,GAAN,CAAWF,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWN,MAAM,CAACM,EAAlB,GAAuB,EAAC,GAAGD,GAAJ;AAASG,QAAAA,QAAQ,EAAC,CAACH,GAAG,CAACG;AAAvB,OAAvB,GAAwDH,GAA3E,CAAP;;AACJ,SAAK,QAAL;AACI,aAAON,KAAK,CAACQ,GAAN,CAAWF,GAAD,IAAS;AACtB,YAAGA,GAAG,CAACC,EAAJ,KAAWN,MAAM,CAACM,EAArB,EAAyB;AACrB,iBAAO,EACH,GAAGD,GADA;AAEHI,YAAAA,YAAY,EAACT,MAAM,CAACG,IAAP,CAAYO,eAFtB;AAGHC,YAAAA,IAAI,EAACX,MAAM,CAACG,IAAP,CAAYS,OAHd;AAIHC,YAAAA,UAAU,EAACb,MAAM,CAACG,IAAP,CAAYW,aAJpB;AAKHN,YAAAA,QAAQ,EAAE,CAACH,GAAG,CAACG;AALZ,WAAP;AAOH,SARD,MAQO,OAAOH,GAAP;AACV,OAVM,CAAP;;AAWJ;AACI,aAAON,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,UAAf","sourcesContent":["const carReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CAR':\r\n            return state.concat([action.data]);\r\n        case 'DELETE_CAR':\r\n            return state.filter((car) => car.id !== action.id);\r\n        case 'EDIT_CAR':\r\n            return state.map((car) => car.id === action.id ? {...car, isEdited:!car.isEdited}:car);\r\n        case 'UPDATE':\r\n            return state.map((car) => {\r\n                if(car.id === action.id) {\r\n                    return {\r\n                        ...car,\r\n                        manufacturer:action.data.newManufacturer,\r\n                        name:action.data.newName,\r\n                        horsepower:action.data.newHorsepower,\r\n                        isEdited: !car.isEdited\r\n                    }\r\n                } else return car;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default carReducer;\r\n"]},"metadata":{},"sourceType":"module"}